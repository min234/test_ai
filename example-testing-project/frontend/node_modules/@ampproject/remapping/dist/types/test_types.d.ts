```python
import pytest
from typing import Union, Optional
from my_module import LoaderContext, SourceMapLoader, Options, SourceMapInput


def test_loader_context_initialization():
    context = LoaderContext(importer='importer_value', depth=1, source='source_value', content=None, ignore=False)
    assert context.importer == 'importer_value'
    assert context.depth == 1
    assert context.source == 'source_value'
    assert context.content is None
    assert context.ignore is False


def test_source_map_loader():
    def mock_loader(file: str, ctx: LoaderContext) -> Optional[SourceMapInput]:
        if ctx.ignore:
            return None
        return {'source': ctx.source}

    context = LoaderContext(importer='importer_value', depth=1, source='source_value', content=None, ignore=False)
    result = mock_loader('file.js', context)
    assert result == {'source': 'source_value'}

    context.ignore = True
    result = mock_loader('file.js', context)
    assert result is None


def test_options_initialization():
    options = Options(excludeContent=True, decodedMappings=False)
    assert options.excludeContent is True
    assert options.decodedMappings is False
```